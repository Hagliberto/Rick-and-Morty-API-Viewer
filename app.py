import streamlit as st
import requests
import logging
from datetime import datetime

# Configura칞칫es da p치gina
st.set_page_config(
    page_title="Rick and Morty", 
    page_icon="游뱕",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={"About": "`P치gina inicial:`游깴 https://hagliberto.streamlit.app/"}  
)

# Configurando o logger
logging.basicConfig(filename='error.log', level=logging.ERROR)

# Fun칞칚o para buscar dados com cache
@st.cache_resource
def fetch_data(endpoint, page_number):
    try:
        response = requests.get(f"https://rickandmortyapi.com/api/{endpoint}?page={page_number}")
        response.raise_for_status()  # Raises HTTPError for bad requests
        return response.json()
    except requests.exceptions.RequestException as e:
        st.error(f"An error occurred: {e}")
        logging.error(f"Request error: {e}")
        return None

def format_date(date_str):
    try:
        # Tente primeiro o formato do epis칩dio
        date_obj = datetime.strptime(date_str, "%B %d, %Y")
        return date_obj.strftime("%d/%m/%Y")
    except ValueError:
        try:
            # Se falhar, tente o formato do personagem
            date_obj = datetime.strptime(date_str, "%Y-%m-%dT%H:%M:%S.%fZ")
            return date_obj.strftime("%d/%m/%Y")
        except ValueError:
            return "Data inv치lida"

def main():
    st.success("Rick and Morty")
    
    option = st.sidebar.radio("Selecione o tipo de informa칞칚o:", ("Personagem", "Epis칩dio"))
    
    if option == "Personagem":
        endpoint = "character"
        # Sempre voltar para a p치gina 1 ao mudar para personagens
        page_number = 1
    else:
        endpoint = "episode"
        page_number = 1  # Sempre voltar para a p치gina 1 ao mudar para epis칩dios
        
    page_number = st.session_state.get(f"{endpoint}_page", page_number)  # Recupera o n칰mero da p치gina da sess칚o ou inicializa com 1

    # Pagina칞칚o
    data = fetch_data(endpoint, page_number)

    if data is not None:
        num_pages = data['info']['pages']  # Armazena o n칰mero total de p치ginas
        
        # Verifica se a p치gina solicitada n칚o ultrapassa o n칰mero total de p치ginas
        if page_number > num_pages:
            page_number = 1  # Redireciona para a p치gina 1 caso a p치gina solicitada n칚o exista

        if option == "Personagem":
            if num_pages >= page_number:
                st.sidebar.info(f"Total de personagens: {data['info']['count']}")
                st.sidebar.info(f"Total de p치ginas: {num_pages}")
                results = data['results']
            else:
                st.write("N칚o existem mais personagens dispon칤veis.")
                page_number = 1  # Voltar para a primeira p치gina
                data = fetch_data(endpoint, page_number)
                results = data['results']
        else:
            if num_pages >= page_number:
                st.sidebar.info(f"Total de epis칩dios: {data['info']['count']}")
                st.sidebar.info(f"Total de p치ginas: {num_pages}")
                results = data['results']
            else:
                st.write("N칚o existem mais epis칩dios dispon칤veis.")
                page_number = 1  # Voltar para a primeira p치gina
                data = fetch_data(endpoint, page_number)
                results = data['results']
        
        num_columns = 3
        cols = st.columns(num_columns)
        for i, item in enumerate(results):
            col_index = i % num_columns
            with cols[col_index]:
                with st.expander(label=item['name'], expanded=False):
                    if option == "Personagem":
                        st.write(f"**Status:** {item['status']}")
                        st.write(f"**Esp칠cie:** {item['species']}")
                        st.write(f"**Tipo:** {item.get('type', 'Desconhecido')}")
                        st.write(f"**G칡nero:** {item['gender']}")
                        st.write(f"**Origem:** {item['origin']['name']}")
                        st.write(f"**Localiza칞칚o:** {item['location']['name']}")
                        st.write(f"**Criado:** {format_date(item['created'])}")
                    else:
                        st.write(f"**Data de Lan칞amento:** {format_date(item['air_date'])}")
                        st.write(f"**Epis칩dio:** {item['episode']}")
                        st.write(f"**N칰mero do Epis칩dio:** {item['episode']}")
                if 'image' in item:
                    try:
                        st.image(item['image'], caption=item['name'], width=250, use_column_width='auto')
                    except Exception as e:
                        st.warning(f"Falha ao exibir imagem para {item['name']}. Por favor, tente novamente mais tarde.")
                st.write("---")
        
        # Adicionar navega칞칚o para os epis칩dios
        if option == "Epis칩dio":
            col1, col2 = st.sidebar.columns([1, 1])  # Divide a barra lateral em duas colunas
        
            if page_number > 1:
                if col1.button("P치gina anterior", key="prev_page"):
                    page_number -= 1
        
            if num_pages >= page_number:
                if col2.button("Pr칩xima p치gina", key="next_page"):
                    page_number += 1
        
            if st.sidebar.button("Voltar para a primeira p치gina", key="first_page"):
                page_number = 1
        
        # Adicionar navega칞칚o para os personagens
        if option == "Personagem":
            col1, col2 = st.sidebar.columns([1, 1])  # Divide a barra lateral em duas colunas
        
            if page_number > 1:
                if col1.button("P치gina anterior", key="prev_page_personagem"):
                    page_number -= 1
        
            if num_pages >= page_number:
                if col2.button("Pr칩xima p치gina", key="next_page_personagem"):
                    page_number += 1
        
            if st.sidebar.button("Voltar para a primeira p치gina", key="first_page_personagem"):
                page_number = 1
        
        

    # Atualizar dados com a nova p치gina
    st.session_state[f"{endpoint}_page"] = page_number
    
    # Informar em qual p치gina se encontra
    st.sidebar.success(f"Voc칡 est치 na p치gina {page_number}/{num_pages}")

if __name__ == "__main__":
    main()
